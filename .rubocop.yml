require:
  - rubocop-performance

#
# Disabled rules
#

## Layout
# Seems buggy - https://github.com/bbatsov/rubocop/issues/2690
Layout/MultilineOperationIndentation:
  Enabled: false

## Lint
# it wants File.exist? instead of File.exists?
Lint/DeprecatedClassMethods:
  Enabled: false

## Metrics
Metrics/AbcSize:
  Enabled: false

# Unrealistic
Metrics/BlockNesting:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

# I don't know what it's metric for "human complexity" is, but it's wrong.
Metrics/PerceivedComplexity:
  Enabled: false

## Naming

# this trips on *any* method called 'get_*' wtf.
Naming/AccessorMethodName:
  Enabled: false

# This blows up on things like base_packages-redhat
Naming/FileName:
  Enabled: false

## Performance
# Performance rules have moved to the rubocop-performance gem.

# buggy: https://github.com/bbatsov/rubocop/issues/2639
Performance/RedundantMatch:
  Enabled: false

# https://github.com/bbatsov/rubocop/issues/2676
Performance/RedundantMerge:
  Enabled: false

# We'll .times.map all we want.
Performance/TimesMap:
  Enabled: false

## Style

Style/CommentAnnotation:
  Enabled: false

# Bug with constants? https://phabricator.fb.com/P56108678
Style/ConditionalAssignment:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/Encoding:
  Enabled: false

# No more 'Missing frozen string literal comment.' linting violations
Style/FrozenStringLiteralComment:
  Enabled: false

# While this can be nice, it also can promote errors. Let people
# use what's comfortable for them
Style/GuardClause:
  Enabled: false

# less readable, not more
Style/IfUnlessModifier:
  Enabled: false

# backslash is extra dumb in ruby, we want the OPPOSITE of this rule
Style/LineEndConcatenation:
  Enabled: false

Style/MultilineTernaryOperator:
  Enabled: false

# We don't use CAPS just for constants.
Style/MutableConstant:
  Enabled: false

# So just keep iterating instead of breaking? wtf.
Style/Next:
  Enabled: false

Style/NumericLiterals:
  Enabled: false

# this isn't testing for consistency it always wants %w() which is dumb
Style/PercentLiteralDelimiters:
  Enabled: false

# Really?
Style/PerlBackrefs:
  Enabled: false

Style/RedundantReturn:
  Enabled: false

Style/RedundantSelf:
  Enabled: false

Style/WordArray:
  Enabled: false


#
# Modified rules
#

Layout/DotPosition:
  EnforcedStyle: trailing

Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent

Layout/LineLength:
  Max: 120

Metrics/BlockLength:
  Max: 80

Style/HashSyntax:
  EnforcedStyle: hash_rockets

Style/SignalException:
  EnforcedStyle: semantic

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma
